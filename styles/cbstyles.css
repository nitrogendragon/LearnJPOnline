*{
    box-sizing: border-box;
}

.checkbox-container {
    
    display:flex;
    flex-direction: column;
    align-items: center;
    font-size: 20px;
}

.checkbox-container label{
    cursor: pointer; 
    display:flex;
}

.checkbox-container input[type='checkbox'] {
    cursor: pointer;
    opacity: 0;/* hide the checkbox */
    position: absolute;/* stops the checkbox from taking up space by always having it
    at the start even if it means overlapping with other text for example*/
}

/*adds in our custom checkbox content before our label*/
.checkbox-container label::before {
    content: '';
    width:1em;/*will scale with our font size*/
    height:1em; 
    border-radius: .15em;
    margin-right: .5em;
    border: .05em solid black;

}
/* adding the input[type = 'checkbox']:hover lets us select the actual checkbox
instead of the label so when we hover over.
+ label::before lets us change the element before label 
tld: find the checkbox element in the container and when hovered over look for the label 
which is a child of the checkbox (via using 'for' keyword) and change the element that comes 
before it aka the .checkbox-container label::before style we made above*/
.checkbox-container label:hover::before,
.checkbox-container input[type = 'checkbox']:hover + label::before {
    background-color: #35E07D;
}

/* in this case adds shadow around specific checkbox being hovered specified by the
:focus added after specifying the input[type='checkbox']. And then specifically we are
targeting the checkbox's child label and then the element before the label that we specify
above
*/
.checkbox-container input[type='checkbox']:focus + label::before {
    box-shadow: 0 0 20px black;  
}



.checkbox-container input[type='checkbox']:checked + label::before {
    content: '\002714';/* id for checkmark icon */
    background-color: #27AE60;
    display:flex;
    justify-content: center;/* centers along main axis*/
    align-items: center;/* finishes centering by vertically centering.. likely changes situationally */
    color: white;
}

.checkbox-container input[type='checkbox']:disabled + label,
.checkbox-container input[type='checkbox']:disabled {
    color: #aaa;
    cursor: default;
}

.checkbox-container input[type='checkbox']:disabled + label::before {
    background-color: #ccc;
    border-color: #999;
}

